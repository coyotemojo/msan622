?as.Date
library(yearmon)
library(zoo)
d$Date <- as.yearmon(d$Date)
head(d)
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
head(d)
str(d)
d$Date <- as.yearmon(levels(d$Date)
d$Date <- as.yearmon(levels(d$Date))
d$Date <- as.yearmon(levels(d$Date))
str(d)
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
levels(d$Date)
d$Date <- as.yearmon(levels(d$Date), "%b %Y")
str(d)
d
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
str9d
str(d)
d
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
d
mypca <- princomp(d, cor=TRUE)
summary(mypca)
scree(d)
mypca <- princomp(d[,-1], cor=TRUE)
summary(mypca)
scree(d)
scree(d[,-1])
mypca$sdev
mypca$loadings
fa_varimax <- factanal(d, factors = 3, n.obs = 254, rotation='varimax',
scores='regression')
fa_varimax <- factanal(d[,-1], factors = 3, n.obs = 254, rotation='varimax',
scores='regression')
d <- cbind(d, fa_varimax$scores)
head(d)
d
d <- d[179:,]
d <- d[179:254,]
d
library(quantmod)
monthlyReturn(PTTAX)
?quantmod
library(fImport)
install.packages('fImport')
library(fImport)
yahooSeries('PTTAX', from='01/01/2000', to='01/01/2005')
?yahooImport
?yahooSeries
yahooImport('pttax', frequency='monthly', from = '01/01/2000', to = '01/01/2005')
PTTAX
str(pttax)
str(PTTAX)
d
test <- yahooImort('s=PTTAX&a=31&b=01&c=2001)
)
')'
str(PTTAX)
test <- yahooImort('s=PTTAX&a=31&b=01&c=2001')
test <- yahooImport('s=PTTAX&a=31&b=01&c=2001')
library(quantmod)
?getQuote
yahooQF
periodReturn(PTTAX, period='monthly', subset=2000)
periodReturn(PTTAX, period='monthly', subset='2000')
periodReturn(PTTAX, period='monthly', subset='2000::')
fa_oblique <- factanal(covmat= as.matrix(d), factors=5, n.obs=24, rotation='promax')
.74^2
.74^2 + .41^2 + .02^2
.698**2
.698**2 + .153**2 + .089**2
(.698**2 + .153**2 + .089**2) - 1
d <- read.csv(
file.choose('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ThreeTypesOfWine/ThreeTypesOfWine.csv'))
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ThreeTypesOfWine/ThreeTypesOfWine.csv')
str(d)
?factor.pa
factor.pa(d[,-1], nfactors=3)
fa(d[,-1], nfactors=3)
fa(d[,-1], nfactors=3, n.obs=178)
fa(d[,-1], nfactors=3, n.obs=178, rotation='varimax')
fa(as.matrix(d[,-1]), nfactors=3, n.obs=178, rotation='varimax')
install.packages('GPArotation')
library(GPArotation)
fa(as.matrix(d[,-1]), nfactors=3, n.obs=178, rotation='varimax')
corMat <= cor(d[,1])
corMat <- cor(d[,1])
corMat <- cor(as.matrix(d[,1])
)
corMat <- cor(as.matrix(d[,-1]))
corMat
fa(corMat, nfactors=3, n.obs=178, rotation='varimax')
fa(corMat, nfactors=3, n.obs=178, rotate='varimax')
getSymbol('PTTAX')
getSymobls('PTTAX')
library(quantmod)
getSymobls('PTTAX')
getSymbols('PTTAX')
PTTAX
getSymbols('PTTAX', from='2000-01-01')
?get
?monthlyReturn
monthlyReturn(PTTAX)
head(PTTAX)
PTTAX['::2007']
PTTAX['::2007-04']
symbols <- c('PTTAX', 'NHYMX', 'CFNLX')
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
summary(d)
d
getSymbols(symbols, from='2000-01-01', to:'2007-04-30')
getSymbols(symbols, from='2000-01-01', to='2007-04-30')
monthlyReturn(PTTAX)
monthly_pttax <- monthlyReturn(PTTAX)
monthly_nhymx <- monthlyReturn(NHYMX)
monthly_cfnlx <- monthlyReturn(CFNLX)
monthly_cfnlx
d
d <- d[179:254,]
d
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
mypca <- princomp(d[,-1], cor=TRUE)
summary(mypca)
scree(d[,-1])
mypca$sdev
mypca$loadings
fa_varimax <- factanal(d[,-1], factors = 3, n.obs = 254, rotation='varimax',
scores='regression')
d <- cbind(d, fa_varimax$scores)
d
d[167:,]
nrow(d)
d <- d[167:nrow(d),]
d
str(monthly_cfnlx)
monthly_cfnlx
monthly_cfnlx[,2]
monthly_cfnlx[,1]
attributes(monthly_cfnlx)
monthly_cfnlx$index
monthly_cfnlx[1]
monthly_pttax[1]
returns <- cbind(monthly_pttax, monthly_nhymx, monthly_cfnlx)
returns
str(returs)
str(returns)
returns[1]
returns[,1]
returns[,2]
data.frame(returns)
test <- data.frame(returns)
str(test)
test[,1]
d <- cbind(d, returns)
d
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
mypca <- princomp(d[,-1], cor=TRUE)
summary(mypca)
scree(d[,-1])
mypca$sdev
mypca$loadings
fa_varimax <- factanal(d[,-1], factors = 3, n.obs = 254, rotation='varimax',
scores='regression')
d <- cbind(d, fa_varimax$scores)
d <- d[167:nrow(d),]
library(quantmod)
returns <- data.frame(monthly_pttax, monthly_nhymx, monthly_cfnlx)
str(returns)
returns <- data.frame(pttax = monthly_pttax,
nhymx = monthly_nhymx,
cfnlx = monthly_cfnlx)
returns
str(returns)
returns <- data.frame('pttax' = monthly_pttax,
'nhymx' = monthly_nhymx,
'cfnlx' = monthly_cfnlx)
str(returns)
head(returns)
returns <- data.frame(pttax = monthly_pttax,
nhymx = monthly_nhymx,
cfnlx = monthly_cfnlx)
head(returns)
monthly_cfnlx
str(monthly_cfnlx)
monthly_cfnlx$dat
monthly_cfnlx$data
monthly_cfnlx$values
monthly_cfnlx$
)
monthly_cfnlx$NULL
monthly_cfnlx$index
monthly_cfnlx$Index
monthly_cfnlx
str(monthly_cfnlx)
monthly_pttax <- as.vector(monthlyReturn(PTTAX))
monthly_pttax
monthly_nhymx <- as.vector(monthlyReturn(NHYMX))
monthly_cfnlx <- as.vector(monthlyReturn(CFNLX))
returns <- data.frame(pttax = monthly_pttax,
nhymx = monthly_nhymx,
cfnlx = monthly_cfnlx)
returns
d <- cbind(d,
pttax = monthly_pttax,
nhymx = monthly_nhymx,
cfnlx = monthly_cfnlx)
d
pttax_lm <- lm(d$pttax ~ d$Factor1 + d$Factor2 + d$Factor3, data=d)
summary(pttax_lm)
nhymx_lm <- lm(d$nhymx ~ d$Factor1 + d$Factor2 + d$Factor3, data=d)
cfnlx_lm <- lm(d$cfnlx ~ d$Factor1 + d$Factor2 + d$Factor3, data=d)
summary(nhymx_lm)
summary(cfnlx_lm)
summary(pttax_lm)
summary(nhymx_lm)
summary(cfnlx_lm)
data(seatbelts)
data(Seatbelts)
require(ggplot)
require(ggplot2)
help(Seatbelts)
Seatbelts
str(Seatbelts)
print(Seatbelts)
str(Seatbelts)
view(Seatbelts)
View(Seatbelts)
summary(pttax_lm)
summary(nhymx_lm)
summary(cfnlx_lm)
pttax_lm$coefficients
summary(pttax_lm)
attributes(pttax_lm)
pttax_lm$terms
coef(pttax_lm)
coef(summary(pttax_lm))
coef(summary(pttax_lm))[,2]
summary(pttax_lm)
summary(nhymx_lm)
summary(cfnlx_lm)
mypca$loadings
coef(summary(pttax_lm))[,2]
L = c(.9, .7, .5)
L
L = vector(.9, .7, .5)
L = vector(c(.9, .7, .5))
vector
?vector
L = as.vector(c(.9, .7, .5))
L
LT
L`
`
?transpose
transpose
L.transpose
t(L)
L
L ** L
L ** t(L)
L = matrix(c(.9, 0, 0, 0, .7, 0, 0, 0, .5), nrow=3, byrow=TRUE)
L
L ** t(l)
L ** t(L)
t(l)
t(L)
L %*% t(L)
covE <- matrix(c(.19, 0, 0, 0, .51, 0, 0, 0, .75), nrow=3, byrow=TRUE)
P <- matrix(c(1.0, .63, .45, .63, 1.0, .35, .45, .35, 1.0), nrow=3, byrow=TRUE)
L %*% t(L) + covE
L <- as.vector(c(.9, .7, .5))
L %*% t(L)
L %*% t(L) + covE
P - L %*% t(L) + covE
P - (L %*% t(L)) + covE
L %*% t(L) + covE
P
L %*% t(L) + covE - P
L
L %*% t(L)
L * t(L)
L * L
L
x <- c(.64, .50, .46, .17, -.29, -.29, -.49, -.52, -.60)
y <- c(.02, -.06, -.24, .74, .66, -.08, .20, -.03, -.17)
plot(x,y)
library(psych)
setwd('/users/Jason/')
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountries/ProteinConsumptionEuropeanCountries.csv')
pc <- princomp(d[,-1], cor=TRUE)
summary(pc)
scree(d[,-1])
factors <- factanal(d[,-1], factors=3, scores='regression')
print(factors)
d <- cbind(d, factors$scores)
d[order(d$Factor1, decreasing=TRUE),'Country']
d[order(d$Factor2, decreasing=TRUE),'Country']
d[order(d$Factor3, decreasing=TRUE),'Country']
bfat <- read.csv('Dropbox/HamrickDataSets/CrossSectionalRegression/BodyFatPercentage/BodyFatPercentage.csv')
bfat <- subset(bfat, select=-c(IDNO, DENSITY))
bfat_dvars <- subset(bfat, select=-BODYFAT)
pca <- princomp(bfat_dvars, cor=TRUE)
summary(pca)
summary(pca)
scree(bfat)
factors <- factanal(bfat_dvars, factors=3, rotation='varimax', scores='regression')
print(factors)
factors <- factanal(covmat=cor(bfat_dvars), factors=3, rotation='varimax', scores='regression')
factors <- factanal(covmat=as.matrix(cor(bfat_dvars)), factors=3, rotation='varimax', scores='regression')
factors <- factanal(bfat_dvars, factors=3, rotation='varimax', scores='regression')
print(factors)
lm1 <- lm(BODYFAT ~ ., data=bfat)
summary(lm1)
bfat <- cbind(bfat, factors$scores)
lm2 <- lm(BODYFAT ~ Factor1 + Factor2 + Factor3, data=bfat)
summary(lm2)
require(car)
vif(lm1)
vif(lm2)
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/CorrelationMatrixTwentyFourPsychologicalTests/CorrelationMatrixTwentyFourPsychologicalTests.csv', header=FALSE)
pca <- eigen(d)
cumvar <- cumsum(pca$values) / sum(pca$values)
scree(d)
cumvar
loads <- pca$vectors[,1:5]
fa_ortho <- factanal(covmat= as.matrix(d), factors=5, n.obs=24, rotation='varimax')
fa_ortho
fa_oblique <- factanal(covmat= as.matrix(d), factors=5, n.obs=24, rotation='promax')
fa_oblique
d <- read.table('~/Dropbox/HamrickDataSets/CrossSectionalRegression/MicrosoftFactorData/MicrosoftFactorData.txt', header=TRUE, sep='\t')
d <- d[,c(1,6, 7, 8, 9, 10, 11)]
mypca <- princomp(d[,-1], cor=TRUE)
summary(mypca)
scree(d[,-1])
mypca$sdev
mypca$loadings
#The loadings shed light on the most important aspects of the data - namely, that the first component is essentially an average of the interest rates across the entire yield curve.  The second component appears to be reflecting the differential between rates on the short-term end of the yield curve vs. rates on the long-term end of the yield curve.  Finally, the third component, with positive loadings on the 3 Month and 10 Year Treasury and negative loadings on the middle two notes, the 1 Year and 3 Year Treasuries, is almost a measure of the convexity of the yield curve.
fa_varimax <- factanal(d[,-1], factors = 3, n.obs = 254, rotation='varimax',
scores='regression')
d <- cbind(d, fa_varimax$scores)
d <- d[167:nrow(d),]
library(quantmod)
symbols <- c('PTTAX', 'NHYMX', 'CFNLX')
getSymbols(symbols, from='2000-01-01', to='2007-04-30')
monthly_pttax <- as.vector(monthlyReturn(PTTAX))
monthly_nhymx <- as.vector(monthlyReturn(NHYMX))
monthly_cfnlx <- as.vector(monthlyReturn(CFNLX))
d <- cbind(d,
pttax = monthly_pttax,
nhymx = monthly_nhymx,
cfnlx = monthly_cfnlx)
pttax_lm <- lm(d$pttax ~ d$Factor1 + d$Factor2 + d$Factor3, data=d)
nhymx_lm <- lm(d$nhymx ~ d$Factor1 + d$Factor2 + d$Factor3, data=d)
cfnlx_lm <- lm(d$cfnlx ~ d$Factor1 + d$Factor2 + d$Factor3, data=d)
summary(pttax_lm)
summary(nhymx_lm)
summary(cfnlx_lm)
#According to the summaries of the linear models, cfnlx is the most sensitive to changes in Factor 2.  In fact, Factor 2 is the only factor that is consistently positive and statistically significant for all of the funds.  This indicates that the funds tend to have better returns when the yield curve exhibits larger differentials between short-term and longer-term rates.
coef(summary(pttax_lm))[,2]
#The linear models reveal that all three of the funds have small, but positive and statistically significant, intercept terms.  In fact, the postiive intercept terms are greater than 2 times the standard error for those estimated terms for all funds.  This indicates that all three fund managers are able to earn a slight premium over just exposing investors to the risks of the 3 market factors.
```
Question 6  (9.1 in J&W):
---
d <- read.csv('~/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountries/ProteinConsumptionEuropeanCountries.csv')
d <- read.csv('~/Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountrie/ProteinConsumptionEuropeanCountries.csv')
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountrie/ProteinConsumptionEuropeanCountries.csv')
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountrie/ProteinConsumptionEuropeanCountries.csv')
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountrie/ProteinConsumptionEuropeanCountries.csv')
d <- read.csv('Dropbox/HamrickDataSets/MultivariateStatisticalAnalysis/ProteinConsumptionInTwentyFiveEuropeanCountries/ProteinConsumptionEuropeanCountries.csv')
pc <- princomp(d[,-1], cor=TRUE)
Jason Ament
setwd('Documents/msan/classes/data_visualization/msan622/homework5/')
runApp()
library(shiny)
runApp()
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
summbar(globalData)
summary(globalData)
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/ui.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/ui.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/ui.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/ui.R')
runApp()
melted <- melt(globalData, id = c('years', 'months', 'time'))
p <- ggplot(
subset(melted, variable == "total_kill_inj_per_km"),
aes(x = months, y = years)
)
p <- p + geom_tile(aes(fill = value), colour = "white")
p
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
melted_df <- melt(globalData, id = c('years', 'months', 'time'))
head(melted_df)
head(melted_df[variable==total_kill_inj_per_km])
head(melted_df[melted_df$variable==total_kill_inj_per_km])
str(melted_df)
summary(melted_df)
table(melted_df$variable)
p <- ggplot(
subset(melted_df, variable == "total_kill_inj_per_km"),
aes(x = months, y = years)
)
p <- p + geom_tile(aes(fill = value), colour = "white")
p
subset(melted_df, variable = "total_kill_inj_per_km")
subset(melted_df, variable = "total_kill_inj_per_km")
test <- subset(melted_df, variable = "total_kill_inj_per_km")
subset(melted_df, variable == "total_kill_inj_per_km")
subset(melted_df, variable = 'total_kill_inj_per_km')
test <- subset(melted_df, variable = 'total_kill_inj_per_km')
test <- subset(melted_df, variable == 'total_kill_inj_per_km')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/ui.R')
runApp()
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
p <- ggplot(
subset(melted_df, variable == "total_kill_inj_per_km"),
aes(x = months, y = years)
)
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low='white', high='red')
p <- p + scale_months()
p <- p + scale_y_discrete(expand = c(0, 0))
p <- p + theme_heatmap()
p <- p + coord_fixed(ratio = 1)
p <- p + coord_flip()
print(p)
p <- ggplot(
subset(melted_df, variable == "total_kill_inj_per_km"),
aes(x = months, y = years)
)
p <- p + geom_tile(aes(fill = value), colour = "white")
p <- p + scale_fill_gradient(low='white', high='red', name='test')
p <- p + scale_months()
p <- p + scale_y_discrete(expand = c(0, 0))
p <- p + theme_heatmap()
p <- p + coord_fixed(ratio = 1)
p <- p + coord_flip()
print(p)
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
source('~/Documents/msan/classes/data_visualization/msan622/homework5/server.R')
runApp()
GlobalData
globalData
source('~/Documents/msan/classes/data_visualization/msan622/homework5/ui.R')
runApp()
